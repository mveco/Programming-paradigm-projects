(ns user (:use clojure.test))

;---------------PRIMERI------------------------------------
(def basic-solvable '( (1 2)
                       (1 3) ) )

(def basic-no-solve '( (2 2 3)
                       (1 2 3)
                       (3 2 2) ) )

(def no-solution1 '((3 4 1 0 2)
                    (3 1 2 4 0)
                    (4 0 3 2 1)
                    (3 1 2 4 0)
                    (3 1 0 2 4)) )

(def allready_solved1 '((3 4 1 0 2)
                        (1 1 2 4 0)
                        (4 0 3 2 1)
                        (2 2 4 1 3)
                        (0 3 0 3 4) ) )


(def solvable1 '( (4 1 2 3)
                  (4 3 2 1)
                  (2 2 3 3)
                  (4 1 1 4) ) )


(def solution1 '( (4 1 2 3)
                  (3 2 1 4)
                  (2 3 3 2)
                  (1 4 4 1) ) )

(def no-solution2 '( (:red :blue :yellow)
                     (:red :red :blue)
                     (:blue :red :yellow) ))

(def solvable2 '( (:red :yellow :yellow)
                  (:red :red :blue )
                  (:blue :blue :yellow) ))

(def solution2 '( (:red :yellow :yellow)
                  (:blue :red :red)
                  (:yellow :blue :blue) ) )

(def no-solution3 '( (2 3 4 5 1 6)
                   (2 4 5 3 1 6)
                   (1 2 3 4 5 6)
                   (4 2 5 6 6 1)
                   (2 2 2 3 4 5)
                   (6 5 4 3 3 1) ) )

(def solvable3 '( (1 2 3 4 5 6)
                  (1 2 3 4 5 6)
                  (1 2 3 4 5 6)
                  (1 2 3 4 5 6)
                  (1 2 3 4 5 6)
                  (1 2 3 4 5 6)
                  ) )

(def solution3 '( (1 2 3 4 5 6)
                  (2 3 4 5 6 1)
                  (3 4 5 6 1 2)
                  (4 5 6 1 2 3)
                  (5 6 1 2 3 4)
                  (6 1 2 3 4 5) ) )

(def solvable3-different-1row  '( (4 5 6 1 2 3)
                                  (1 2 3 4 5 6)
                                  (1 2 3 4 5 6)
                                  (1 2 3 4 5 6)
                                  (1 2 3 4 5 6)
                                  (1 2 3 4 5 6) ) )


(def solution3-different-1row '( (4 5 6 1 2 3)
                                 (1 2 3 4 5 6)
                                 (2 3 4 5 6 1)
                                 (3 4 5 6 1 2)
                                 (5 6 1 2 3 4)
                                 (6 1 2 3 4 5) ) )

(def solvable-big '( (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                     (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20) ) )

(def solution-big '( (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)
                    (2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1)
                    (3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2)
                    (4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3)
                    (5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4)
                    (6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5)
                    (7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6)
                    (8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7)
                    (9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8)
                    (10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9)
                    (11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10)
                    (12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11)
                    (13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12)
                    (14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13)
                    (15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14)
                    (16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)
                    (17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16)
                    (18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17)
                    (19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18)
                    (20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19) ) )


(deftest test-solve
 (is (= '( (1 2)(3 1) ) (solve basic-solvable))) ;проверка на прост случај кој има реш
 (is (= "NO SOLUTION" (solve basic-no-solve))) ;проверка прост пример- матрица 3х3 кој нема реш
 (is (= "NO SOLUTION" (solve no-solution1))) ;проверка на примерот од домашната
 (is (= allready_solved1 (solve allready_solved1))) ;проверка на пример кој е веќе решение
 (is (= solution1 (solve solvable1))) ;проверка со малку посложен решлив пример - матрица 4х4
 (is (= "NO SOLUTION" (solve no-solution3))) ;проверка на нерешлив проблем кој е матрица 6х6
 (is (= solution3 (solve solvable3))) ;проверка на решлива матрица 6x6
 (is (= solution3-different-1row (solve solvable3-different-1row))) ;проверка истата матрица од погоре, со тоа што е извртен 1от ред.
 ;Доказ дека решенијата не с епроменуваат со тоа што тој останува статичен
 (is (= "NO SOLUTION" (solve no-solution2))) ;проверка на рандом пример
 (is (= solution2 (solve solvable2))) ;проверка на рандом пример
 (is (= solution-big (solve solvable-big))) ;проверка со голем пример
)

(run-tests)
